#creation of lb and using networkbalancer, scheme is interanal,load balncer ipv4,and netorking  vpc existing one,create new security groupwith port22, Listner tcp :22 using terraform 
#Create a new security group allowing inbound SSH (port 22).
#Create an internal NLB inside the existing VPC.
#Attach the NLB to subnets within the VPC.
#Create a TCP listener on port 22.

# Create a Security Group allowing SSH (port 22)
resource "aws_security_group" "nlb_sg" {
  name        = var.security_group_name #"nlb-security-group"
  description = "Allow SSH access"
  vpc_id      = var.vpc_id

  ingress {
    description = "Allow SSH"
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"] # Restrict this for security
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = var.security_group_name
  }
}

# Create an Internal Network Load Balancer (NLB)
resource "aws_lb" "nlb" {
  name               = var.aws_lb #"my-internal-nlb" # Fixed name issue
  internal           = true
  load_balancer_type = "network"
  security_groups    = [aws_security_group.nlb_sg.id] # Attach security group
  subnets            = var.subnet_ids
  enable_deletion_protection = false
  #avaliability_zones = "ap-south-1b"

  tags = {
    Name = var.aws_lb
  }
}

# Create a TCP listener for port 22
resource "aws_lb_listener" "tcp_listener" {
  load_balancer_arn = aws_lb.nlb.arn
  protocol          = "TCP"
  port             = 22

  default_action {
    type             = "forward"
    target_group_arn = aws_lb_target_group.ssh_target_group.arn
  }
}

# Create a Target Group for TCP:22
resource "aws_lb_target_group" "ssh_target_group" {
  name        = var.nlb_name
  port        = 22
  protocol    = "TCP"
  vpc_id      = var.vpc_id
  target_type = "instance"

  health_check {
    protocol            = "TCP"
    port                = "22"
    interval            = 30
    timeout             = 10
    healthy_threshold   = 2
    unhealthy_threshold = 2
  }

  tags = {
    Name = var.nlb_name
  }
}

# Attach Multiple EC2 Instances to the Target Group (Fixed issue)
resource "aws_lb_target_group_attachment" "ssh_target_attachment" {
  for_each         = toset(var.instance_ids) # Loop through instance IDs
  target_group_arn = aws_lb_target_group.ssh_target_group.arn
  target_id        = each.value
  port             = 22
}

#variable
variable "vpc_id" {
  description = "The ID of the existing VPC"
  type        = string
}

variable "subnet_ids" {
  description = "List of subnet IDs in different AZs"
  type        = list(string)
}

variable "instance_ids" {
  description = "List of EC2 Instance IDs to attach to the target group"
  type        = list(string)
}



variable "nlb_name" {
  description = "Name of the Network Load Balancer"
  type        = string
  default     = "my-internal-nlb"
}

variable "aws_lb" {
  type = string
}

variable "security_group_name" {
    type = string
  
}

#dev.tfvars
vpc_id         = "vpc-0d38241b7910def2a"
subnet_ids     = ["subnet-065800cb667115781", "subnet-0597e69946478cccf", "subnet-0a1b2c3d4e5f6g7h8"]
instance_ids   = ["i-07356c48e5ceb2ff5", "i-0252294d94b10fc02"]
security_group_name = "nlb-security-group"
nlb_name       = "my-internal-nlb"
aws_lb         = "testing"
